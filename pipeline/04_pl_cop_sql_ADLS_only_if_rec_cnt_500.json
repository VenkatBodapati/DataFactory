{
	"name": "04_pl_cop_sql_ADLS_only_if_rec_cnt_500",
	"properties": {
		"description": "Get list of tables and copy the table data to ADLS only if record count is > 100 or 500.",
		"activities": [
			{
				"name": "ForEach1",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "Lookup1",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('Lookup1').output.value",
						"type": "Expression"
					},
					"isSequential": true,
					"activities": [
						{
							"name": "GetTableCount",
							"type": "Lookup",
							"dependsOn": [
								{
									"activity": "Set variable1",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "AzureSqlSource",
									"sqlReaderQuery": {
										"value": "@concat('SELECT COUNT(1) AS RecCnt FROM SalesLT.', item().name)",
										"type": "Expression"
									},
									"queryTimeout": "02:00:00",
									"partitionOption": "None"
								},
								"dataset": {
									"referenceName": "ds_AzureSQL_Generic",
									"type": "DatasetReference",
									"parameters": {
										"tablename": "Product_Bikes"
									}
								}
							}
						},
						{
							"name": "Set variable1",
							"type": "SetVariable",
							"dependsOn": [],
							"policy": {
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"variableName": "tablename",
								"value": {
									"value": "@item().name",
									"type": "Expression"
								}
							}
						},
						{
							"name": "If Cnt gretaer 100",
							"type": "IfCondition",
							"dependsOn": [
								{
									"activity": "GetTableCount",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"userProperties": [],
							"typeProperties": {
								"expression": {
									"value": "@greater(activity('GetTableCount').output.firstRow.RecCnt,100)",
									"type": "Expression"
								},
								"ifFalseActivities": [
									{
										"name": "false",
										"type": "Wait",
										"dependsOn": [],
										"userProperties": [],
										"typeProperties": {
											"waitTimeInSeconds": 1
										}
									}
								],
								"ifTrueActivities": [
									{
										"name": "True",
										"type": "Wait",
										"dependsOn": [],
										"userProperties": [],
										"typeProperties": {
											"waitTimeInSeconds": 1
										}
									},
									{
										"name": "Copy data1",
										"type": "Copy",
										"dependsOn": [
											{
												"activity": "True",
												"dependencyConditions": [
													"Succeeded"
												]
											}
										],
										"policy": {
											"timeout": "0.12:00:00",
											"retry": 0,
											"retryIntervalInSeconds": 30,
											"secureOutput": false,
											"secureInput": false
										},
										"userProperties": [],
										"typeProperties": {
											"source": {
												"type": "AzureSqlSource",
												"queryTimeout": "02:00:00",
												"partitionOption": "None"
											},
											"sink": {
												"type": "DelimitedTextSink",
												"storeSettings": {
													"type": "AzureBlobFSWriteSettings"
												},
												"formatSettings": {
													"type": "DelimitedTextWriteSettings",
													"quoteAllText": true,
													"fileExtension": ".txt"
												}
											},
											"enableStaging": false,
											"translator": {
												"type": "TabularTranslator",
												"typeConversion": true,
												"typeConversionSettings": {
													"allowDataTruncation": true,
													"treatBooleanAsNumber": false
												}
											}
										},
										"inputs": [
											{
												"referenceName": "ds_SQL_Dynamic_table",
												"type": "DatasetReference",
												"parameters": {
													"schema": "salesLt",
													"table": {
														"value": "@item().name",
														"type": "Expression"
													}
												}
											}
										],
										"outputs": [
											{
												"referenceName": "ds_adls_landing_output_dynamic",
												"type": "DatasetReference",
												"parameters": {
													"filename": {
														"value": "@concat(item().name,'.csv')",
														"type": "Expression"
													}
												}
											}
										]
									}
								]
							}
						}
					]
				}
			},
			{
				"name": "Lookup1",
				"type": "Lookup",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"sqlReaderQuery": "SELECT TOP 3 name FROM SYS.TABLES WHERE TYPE = 'U' AND Name NOT IN ('BuildVersion','ErrorLog')",
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "ds_AzureSQL_customer",
						"type": "DatasetReference"
					},
					"firstRowOnly": false
				}
			}
		],
		"variables": {
			"tablename": {
				"type": "String"
			}
		},
		"folder": {
			"name": "Self"
		},
		"annotations": [],
		"lastPublishTime": "2023-08-09T08:27:56Z"
	},
	"type": "Microsoft.DataFactory/factories/pipelines"
}